#!/usr/bin/env ruby

require 'pathname'
@root = Pathname(__FILE__).dirname.parent.expand_path


%w{json thor angry_hash}.each do |lib|
  root = @root+'vendor'+lib
  $: << (root+'lib')
end

require 'thor'

$:.unshift @root+'lib'
require 'angry_mob'

module ArgvExtension
  def opt name
    self[ index("--#{name}")+1 ]
  rescue
    nil
  end

  def shopt name
    self[ index("-#{name}")+1 ]
  rescue
    nil
  end

  def flag? name
    !! index("--#{name}")
  end


  def nodename
    opt 'nodename'
  end

  def dry_run?
    flag? 'dry-run'
  end

  def act
    opt 'act'
  end

  def defines
    defines = []
    each_with_index {|s,i| defines << self[i+1] if s == '-D'}
    defines
  end

  def json_file
    opt 'json-file'
  end

  def mobs
    mobs = []
    each_with_index {|s,i| mobs << self[i+1] if s == '--mob'}
    mobs
  end
end

ARGV.extend ArgvExtension


ui = AngryMob::UI.new(:debug => false)


# TODO - merge in json snippets from the cmdline

attributes ||= {}

if json_file = ARGV.json_file
  require 'json/pure'
  json_file = json_file.pathname.expand_path
  attributes = JSON.parse( json_file.read )
end

attributes = AngryHash[attributes]

nodename = ARGV.nodename || `hostname -s`.chomp

if act = ARGV.act
  attributes.acts = [ act ]
end

ARGV.defines.each {|define| attributes.merge_string define}

attributes.dry_run = ARGV.dry_run?

begin

  # XXX not threadsafe, but what is?
  AngryMob::Mob.ui = ui
  mob_loader = AngryMob::MobLoader.new
  
  ARGV.mobs.each {|mob_path| mob_loader.add_mob(mob_path)}

  mob = mob_loader.to_mob
  mob.riot!( nodename, attributes )

rescue
	puts "\nerror [#{$!.class}] #{$!}"
	$!.backtrace.each {|b| puts "  #{b}"}
end
